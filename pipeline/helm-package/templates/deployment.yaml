apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.service.environmentType }}-{{ .Values.service.environmentName }}-{{ .Chart.Name }}
  namespace: {{ .Values.service.namespace }}
  labels:
    app: {{ $.Values.service.environmentType }}-{{ .Values.service.environmentName }}-{{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "-" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "name" $ }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.service.replica }}
  selector:
    matchLabels:
      app: {{ $.Values.service.environmentType }}-{{ .Values.service.environmentName }}-{{ .Chart.Name }}
      chart: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      app.kubernetes.io/name: {{ include "name" $ }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: {{ $.Values.service.environmentType }}{{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Values.service.environmentType }}-{{ .Values.service.environmentName }}-{{ .Chart.Name }}
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/name: {{ include "name" $ }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: {{ $.Values.service.environmentType }}{{ .Chart.Name }}
    spec:
      volumes:
# pv change
      {{- if eq .Values.service.environmentType "auth" }}
        {{- if $.Values.extraPersistentVolumeClaims.appLogAuthVolume.enabled }}
        - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogAuthVolume.storageName}}"
          persistentVolumeClaim:
            claimName: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogAuthVolume.storageName}}"
        {{- else }}
        - name: logs-sharing
          emptyDir: {}
        {{- end }}
      {{- end }}
      {{- if eq .Values.service.environmentType "live" }}
        {{- if $.Values.extraPersistentVolumeClaims.appLogLiveVolume.enabled }}
        - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogLiveVolume.storageName}}"
          persistentVolumeClaim:
            claimName: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogLiveVolume.storageName}}"
        {{- else }}
        - name: logs-sharing
          emptyDir: {}
        {{- end }}
      {{- end }}

  # splunk volume change
    {{- if $.Values.splunk.enable }}
      {{- if $.Values.splunk.sidecar_configmap }}
        - name: "splunk-otel-agent-hom-{{ $.Values.service.environmentType }}"
          configMap:
            name: {{ $.Values.splunk.sidecar_configmap }}
      {{- end }}
        - name: checkpoint
          emptyDir: {}
    {{- end }}
## splunk volume changes end

      affinity:
        nodeAffinity:
          {{- if $.Values.service.nodeLabel }}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - {{ $.Values.service.nodeLabel }}
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- include "nodeAffinityRequiredDuringScheduling" $ | indent 8 }}
          {{- end }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- include "nodeAffinityPreferredDuringScheduling" $ | indent 8 }}
      {{- include "service-podAntiAffinity" $ | indent 6 }}
      containers:
  ###### splunk code begins ######
{{- if $.Values.splunk.enable }}
      - name: splunk-otel-collector
        image: {{ $.Values.splunk.image }}:0.90.0
        {{- if $.Values.service.imagePullPolicy }}
        imagePullPolicy: {{ $.Values.service.imagePullPolicy }}
        {{- end }}
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: K8S_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SPLUNK_PLATFORM_HEC_TOKEN
          valueFrom:
            secretKeyRef:
              key: splunk_platform_hec_token
              name: {{ $.Values.splunk.sidecar_secret }}
        - name: SPLUNK_MEMORY_TOTAL_MIB
          value: "{{ include "splunk-otel-collector.convertMemToMib" $.Values.splunk.resources.limits.memory }}"
        resources:
{{ toYaml $.Values.splunk.resources | indent 12 }}
        command:
        - /otelcol
        - --config=/conf/relay.conf
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          privileged: false
          capabilities:
            add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - SETGID
            - SETUID
            - SETPCAP
            - NET_BIND_SERVICE
            - NET_RAW
            - SYS_CHROOT
            - MKNOD
            - AUDIT_WRITE
            - SETFCAP
            drop:
            - all
        livenessProbe:
          initialDelaySeconds: 60
          failureThreshold: 3
          httpGet:
            path: /
            port: 13133
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          initialDelaySeconds: 60
          failureThreshold: 3
          httpGet:
            path: /
            port: 13133
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        {{- if eq .Values.service.environmentType "auth" }}
          {{- if $.Values.extraPersistentVolumeClaims.appLogAuthVolume.enabled }}
          - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogAuthVolume.storageName}}"
            mountPath: /app_logs
          {{- else }}
          - name: logs-sharing
            mountPath: /app_logs
          {{- end }}
          - name: "{{ $.Values.splunk.sidecar_configmap}}"
            mountPath: /conf
          - name: "{{ $.Values.splunk.checkpoint}}"
            mountPath: /var/addon/splunk/otel_pos
        {{- end }}
        {{- if eq .Values.service.environmentType "live" }}
          {{- if $.Values.extraPersistentVolumeClaims.appLogLiveVolume.enabled }}
          - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogLiveVolume.storageName}}"
            mountPath: /app_logs
          {{- else }}
          - name: logs-sharing
            mountPath: /app_logs
          {{- end }}
          - name: "{{ $.Values.splunk.sidecar_configmap}}"
            mountPath: /conf
          - name: "{{ $.Values.splunk.checkpoint}}"
            mountPath: /var/addon/splunk/otel_pos
        {{- end }}
  {{- end }}
    ###### splunk code ends ######
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ $.Values.service.imagePullPolicy }}
        resources:
          {{- toYaml $.Values.service.resources | nindent 12 }}
        env:
        - name: "ENVIRONMENT"
          value: {{ $.Values.service.environmentName | quote }}
        - name: "TZ"
          value: {{$.Values.service.timezone | quote }}
        - name: "NEXT_POD_TYPE"
          value: {{ $.Values.service.environmentType | quote }}
        - name: "TENANT"
          value: {{$.Values.service.tenant | quote }}
        - name: "VAULT_URL"
          value: {{ $.Values.service.vaultUrl | quote }}
        - name: "APP_NAME"
          value: {{ .Chart.Name | quote }}
        - name: "SOURCE_KV_URL"
          value: {{ .Values.service.sourceKVUrl | quote }}
        - name: "CLIENT_ID"
          value: {{ .Values.service.clientID | quote }}
        - name: "TENANT_ID"
          value: {{ .Values.service.tenantID | quote }}
        - name: "CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              name: client-secret
              key: CLIENT_SECRET
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NEXT_PUBLIC_LOCAL_MBOX
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_LOCAL_MBOX
              name: next-token
        - name: NEXT_PUBLIC_GG_ENABLED
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_GG_ENABLED
              name: next-token
        - name: NEXT_PUBLIC_PROMOTIONAL_BANNER
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_PROMOTIONAL_BANNER
              name: next-token
        - name: NEXT_PUBLIC_SEVERE_WEATHER_BANNER
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_SEVERE_WEATHER_BANNER
              name: next-token
        - name: NEXT_PUBLIC_OT_RTM
          valueFrom:
            secretKeyRef:
              name: next-token
              key: NEXT_PUBLIC_OT_RTM_HOM
        - name: NEXT_PUBLIC_DYNAMIC_NC_BANNER
          valueFrom:
            secretKeyRef:
              key: NEXT_PUBLIC_DYNAMIC_NC_BANNER
              name: next-token
        - name: NEXT_EQX_ENABLE
          valueFrom:
            secretKeyRef:
              key: NEXT_EQX_ENABLE_HOM
              name: next-token
        - name: NEXT_PUBLIC_ENABLE_RESPONSIVE_ADS_HOM_BTF
          valueFrom:
            secretKeyRef:
              name: next-token
              key: NEXT_PUBLIC_ENABLE_RESPONSIVE_ADS_HOM_BTF
        - name: NEXT_PUBLIC_ENABLE_RESPONSIVE_ADS_HOM_LOB
          valueFrom:
            secretKeyRef:
              name: next-token
              key: NEXT_PUBLIC_ENABLE_RESPONSIVE_ADS_HOM_LOB
        {{- if eq $.Values.service.environmentType "auth" }}
        - name: "VAULT_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.service.vaultTokenSecret }}
              key: VAULT_TOKEN
        - name: NEXT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: NEXT_CLIENT_SECRET
              name: next-token
        - name: NEXT_ORG_ID
          valueFrom:
            secretKeyRef:
              key: NEXT_ORG_ID
              name: next-token
        - name: NEXT_META_SCOPES
          valueFrom:
            secretKeyRef:
              key: NEXT_META_SCOPES
              name: next-token
        - name: NEXT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: NEXT_PRIVATE_KEY
              name: next-token
        - name: NEXT_TECHNICAL_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              key: NEXT_TECHNICAL_ACCOUNT_ID
              name: next-token
        - name: NEXT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: NEXT_CLIENT_ID
              name: next-token
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 120
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 120
          successThreshold: 1
          failureThreshold: 20
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          privileged: false
          capabilities:
            drop:
            - all
            add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - SETGID
            - SETUID
            - SETPCAP
            - NET_BIND_SERVICE
            - NET_RAW
            - SYS_CHROOT
            - MKNOD
            - AUDIT_WRITE
            - SETFCAP
        volumeMounts:
        {{- if eq .Values.service.environmentType "auth" }}
          {{- if $.Values.extraPersistentVolumeClaims.appLogAuthVolume.enabled }}
          - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogAuthVolume.storageName}}"
            mountPath: {{ $.Values.extraPersistentVolumeClaims.appLogAuthVolume.mountPath }}
          {{- else }}
          - name: logs-sharing
            mountPath: /app/logs
          {{- end }}
        {{- end }}
        {{- if eq .Values.service.environmentType "live" }}
          {{- if $.Values.extraPersistentVolumeClaims.appLogLiveVolume.enabled }}
          - name: "{{ $.Values.service.tenant }}{{ $.Values.service.environmentName }}-{{$.Values.extraPersistentVolumeClaims.appLogLiveVolume.storageName}}"
            mountPath: {{ $.Values.extraPersistentVolumeClaims.appLogLiveVolume.mountPath }}
          {{- else }}
          - name: logs-sharing
            mountPath: /app/logs
          {{- end }}
        {{- end }}
